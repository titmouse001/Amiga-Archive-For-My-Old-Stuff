' *** NOTE: This code includes some Amos_Turbo instructions.***
' Turbo instructions used are: Raw key(n)    
'                              Left Click  
'                              Blit Clear n
'                              F put static block,x,y  
'                              Reserve Static Block n
'                              Static Block Erase
'                              Multi no/yes
'                              Vbl Wait x
'All these commands can be done in normal Amos, but the turbo commands 
'are many times faster.
'
'*** All Banks are empty on loading, only intialise on running. ***      
'When intitlaise Banks read: 
'Bank   5 - Samples                   -> "Amos sound bank" 
'Bank   6 - Iff Picture               -> "info screen" 
'Bank   7 - Data                      -> "Map Data"  
'Bank   8 - Data                      -> "Map Car Direction Data"  
'Bank   9 - Iff Picture               -> "Demo screen picture"   
'Bank  10 -  "     "                              "  
'Bank  11 -  "     "                              "  
'Bank  12 -  "     "                              "  
'Bank  13 - Sound Tracker Module 
'Bank  14 - Iff Picture               -> "Small map screen"  
'Bank  15 -  "     "                  -> "Playing Screen"  
'  
'
'
'******************************************************************* 
Rem Break Off : Amos Lock  : Request Off   
Rem Static Block Erase   
'*******************************************************************     
'
'Global variable arrays, shared between both players.  
Dim PX(36),PY(36),X(1),Y(1),SPDO(1),PC(100),S(1),SS(1),STR_X(1),STR_Y(1),DAM_WHEEL(1)
Dim SPEED(1),PNT_X(1),PNT_Y(1),WX(1),WY(1),T(1),SCRL_X(1),SCRL_Y(1),CAR_X(1),CANT_DROP(1)
Dim CAR_Y(1),HIT(1),SKID(1),HOLD_T(1),CS(1),MISX(1),MISY(1),RCX(1),RCY(1),CAR_HIT(1)
Dim PNTMX(1),PNTMY(1),MT(1),WMX(1),WMY(1),MIS_ON(1),RPNT_X(1),RPNT_Y(1),MISSILE_HIT(1)
Dim NO_HIT(1),FUEL(1),FUEL_C(1),WEPON(1),EX(1),DAMAGE(1),CT(1),TURN(1),BOMBS(1),ROCKETS(1)
Dim WD(1),LAPS(1),NO_FUEL(1),CHECK_POINT(1),LAST(1),ENGINE(1),MNE_X(1),MNE_Y(1),_FIX(1)
Global FUEL(),FUEL_C(),WEPON(),EX(),DAMAGE(),NO_HIT(),BOMBS(),ROCKETS(),MNE_X(),MNE_Y()
Global PY(),PX(),SKID(),HOLD_T(),SIZE_X,SIZE_Y,SPDO(),CAR_HIT(),MISSILE_HIT(),DAM_WHEEL()
Global X(),Y(),STR_X(),STR_Y(),SPEED(),PNT_X(),PNT_Y(),WX(),WY(),W_VBL,PC(),ADR,ENGINE(),_FIX()
Global T(),SCRL_X(),SCRL_Y(),CAR_X(),CAR_Y(),HIT(),CS(),RCX(),RCY(),SS(),LAST(),CT(),TURN()
Global PNTMX(),PNTMY(),MT(),MISX(),MISY(),WMX(),WMY(),MIS_ON(),RPNT_X(),RPNT_Y(),S(),SEL1,SEL2
Global LAPS,QUIT,WD(),LAPS(),NO_FUEL(),CHECK_POINT(),CANT_DROP(),W_VBL,T,LVE,WEPS
Global MUS,CHCK1$,CHCK2$,M$
CHCK1$="ABCDEFGHIJKLNMOPQRSTUVWXYZ1234567890!~%^&*()_+\[];,./{}:<>? "
CHCK2$="!~'+,-.0123456789:;?ABCDEFGHIJKLMNOPQRSTUVWXYZ "
'  
SET_UP
Rem this next line when running from AMOS SYSTEM   
Rem Multi No : Rem Used here, gives the disk drive time to stop spinning 
'                  before locking out the multi task system.           
'  
Do 
   OPTION
   INITIALISE[0] : Rem initialise for game  
   MAIN
Loop 
'
Procedure MAIN
   If SEL1=0 and SEL2=0
      Do 
         _TEST_JOYSTICK[0]
         _TEST_JOYSTICK[1]
         _UPDATE_SCREEN
         Exit If QUIT>0 or Raw Key(69)
      Loop 
   End If 
   If SEL1=1 and SEL2=1
      Do 
         COMPUTER[0]
         COMPUTER[1]
         _UPDATE_SCREEN
         Exit If QUIT>0 or Fire(0) or Fire(1) or Raw Key(69)
      Loop 
   End If 
   If SEL1=1 and SEL2=0
      Do 
         COMPUTER[0]
         _TEST_JOYSTICK[1]
         _UPDATE_SCREEN
         Exit If QUIT>0 or Raw Key(69)
      Loop 
   End If 
   If SEL1=0 and SEL2=1
      Do 
         COMPUTER[1]
         _TEST_JOYSTICK[0]
         _UPDATE_SCREEN
         Exit If QUIT>0 or Raw Key(69)
      Loop 
   End If 
   '
   Sprite Off : Colour Back 0 : Wait Vbl 
   If QUIT<>0
      If QUIT<3
         RIP_PLY[QUIT]
      Else 
         WINNER_PLY[QUIT-2]
      End If 
   End If 
End Proc
Procedure COMPUTER[PLY]
   T=T(PLY)
   If CAR_HIT(PLY)=0 and SKID(PLY)=0 and HIT(PLY)=0
      If LAST(PLY)=T and SPEED(PLY)>16
         Add CS(PLY),1,0 To 2
         If CS(PLY)=0
            _ACCELERATE[PLY]
         End If 
      Else 
         If SPEED(PLY)=16 and LAST(PLY)<>T and Rnd(8)=0
            _BRAKE[PLY]
         End If 
      End If 
      LAST(PLY)=T : S=Peek((S(PLY)-ADR)/2+16384+ADR)+1
      '------------------------------------------------
      On S Goto L1,L2,L3,L4,L5,L6,L7,L8
      Pop Proc
      L1:
      If T<>1
         If T>18
            Add T(PLY),1,1 To 36
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
      Pop Proc
      L2:
      If T<>6
         If T<6
            Add T(PLY),1,1 To 36
         Else 
            If T>24
               Add T(PLY),1,1 To 36
            Else 
               Add T(PLY),-1,1 To 36
            End If 
         End If 
      End If 
      Pop Proc
      L3:
      If T<>10
         If T<10
            Add T(PLY),1,1 To 36
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
      Pop Proc
      L4:
      If T<>15
         If T<15
            Add T(PLY),1,1 To 36
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
      Pop Proc
      L5:
      If T<>19
         If T<19
            Add T(PLY),1,1 To 36
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
      Pop Proc
      L6:
      If T<>24
         If T<24
            Add T(PLY),1,1 To 36
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
      Pop Proc
      L7:
      If T<>28
         If T<28
            If T<11
               Add T(PLY),-1,1 To 36
            Else 
               Add T(PLY),1,1 To 36
            End If 
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
      Pop Proc
      L8:
      If T<>33
         If T<33
            If T<15
               Add T(PLY),-1,1 To 36
            Else 
               Add T(PLY),1,1 To 36
            End If 
         Else 
            Add T(PLY),-1,1 To 36
         End If 
      End If 
   End If 
End Proc
Procedure _TEST_JOYSTICK[PLY]
   If Fire(PLY) and WEPS=0
      If Jup(PLY) and MIS_ON(PLY)=0 and MISSILE_HIT(PLY)=0
         CALC=230*PLY
         If ROCKETS(PLY)>0
            Dec ROCKETS(PLY)
            Sam Play PLY+1,4
            RCX(PLY)=CAR_X(PLY)/SPEED(PLY) : RCY(PLY)=CAR_Y(PLY)/SPEED(PLY)
            PNTMX(PLY)=PNT_X(PLY)+4
            PNTMY(PLY)=PNT_Y(PLY)+4
            MISX(PLY)=WX(PLY) : Rol.w 3,MISX(PLY)
            MISY(PLY)=WY(PLY) : Rol.w 3,MISY(PLY)
            WMX(PLY)=WX(PLY) : WMY(PLY)=WY(PLY)
            MT(PLY)=T(PLY) : MIS_ON(PLY)=1
            X=(WMX(PLY)+RCX(PLY))/16+223+PNTMX(PLY)
            Y=(WMY(PLY)+RCY(PLY))/16+193+PNTMY(PLY)
            Sprite 4+PLY,X,Y,202
            Amal 4+PLY,"A 0,("+Str$(202-(PLY*2))+",16)("+Str$(203-(PLY*2))+",16)"
            Amal On 4+PLY
            Screen 0 : _TYPE[CALC+70,181,Str$(ROCKETS(PLY)),1]
            Screen Copy 0,CALC+70,181,CALC+86,187 To Physic(0),CALC+70,181
            Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
            Put Block 381,CALC+16,240 : Rem missile fired
            Screen Copy Logic(0),CALC,221,230*PLY+80,251 To Physic(0),CALC,221
            If ROCKETS(PLY)=1
               Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
               Put Block 389,CALC+16,240 : Rem low on rockets 
               Screen Copy Logic(0),CALC,221,230*PLY+80,251 To Physic(0),CALC,221
            End If 
         Else 
            Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
            Screen 0 : Put Block 391,CALC+16,240 : Rem no missiles  
            Screen Copy Logic(0),CALC,221,230*PLY+80,251 To Physic(0),CALC,221
         End If 
      End If 
      If Jdown(PLY)
         X=(CAR_X(PLY)/SPEED(PLY)+WX(PLY)+64-(PX(T(PLY))/8))/16*16
         Y=(CAR_Y(PLY)/SPEED(PLY)+WY(PLY)+64-(PY(T(PLY))/8))/16*16
         W=(X/16+((PX(T(PLY))/16)/16)+PNT_X(PLY))*2+(Y/16+((PY(T(PLY))/16)/16)+PNT_Y(PLY))*256+ADR
         CALC=230*PLY
         If BOMBS(PLY)>0
            Dec CANT_DROP(PLY)
            If Deek(W)<27 and Deek(W+2)<27 and Deek(W+256)<27 and Deek(W+258)<27
               Sam Play PLY+1,8
               Dec BOMBS(PLY)
               CANT_DROP(PLY)=20
               Screen 1+PLY
               Doke W,309 : Doke W+2,310
               Doke W+256,311 : Doke W+258,312
               Put Block 313,X+8,Y+8
               If PNT_X(1-PLY)>PNT_X(PLY)-8 and PNT_X(1-PLY)<PNT_X(PLY)+8 and PNT_Y(1-PLY)>PNT_Y(PLY)-8 and PNT_Y(1-PLY)<PNT_Y(PLY)+8
                  Screen 2-PLY
                  PL=1-PLY
                  X1=CAR_X(PLY)/SPEED(PLY)+(PNT_X(PLY)-PNT_X(PL))*16+56+WX(PLY)
                  Y1=CAR_Y(PLY)/SPEED(PLY)+(PNT_Y(PLY)-PNT_Y(PL))*16+62+WY(PLY)
                  Bob PL,X1,Y1,36*PL+T(PL)
                  Put Block 313,X-X Bob(6+PLY)+X Bob(PL)+8,Y-Y Bob(6+PLY)+Y Bob(PL)+8
               End If 
               NO_HIT(PLY)=26
               Screen 0 : _TYPE[CALC+8,181,Str$(BOMBS(PLY))+" ",1]
               Screen Copy 0,CALC+8,181,CALC+24,187 To Physic(0),CALC+8,181
               Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
               Put Block 380,CALC+16,240 : Rem mine dropped 
               Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),CALC,221
               If BOMBS(PLY)=1
                  Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
                  Put Block 388,CALC+16,240
                  Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),CALC,221
               End If 
            Else 
               If CANT_DROP(PLY)=0
                  CANT_DROP(PLY)=14
                  Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
                  Screen 0 : Put Block 386,CALC+16,240 : Rem Can't drop 
                  Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),CALC,221
               End If 
            End If 
         Else 
            Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
            Screen 0 : Put Block 390,CALC+16,240 : Rem no mines   
            Screen Copy Logic(0),CALC,221,230*PLY+80,251 To Physic(0),CALC,221
         End If 
      End If 
   Else 
      If SKID(PLY)=0
         If Jup(PLY)
            If SPDO(PLY)<187 and HIT(PLY)=0
               Add CS(PLY),1,0 To ENGINE(PLY)
               If CS(PLY)=0
                  ENGINE(PLY)=3
                  _ACCELERATE[PLY]
                  If SPDO(PLY)=183 and Deek(S(PLY))<41
                     Sam Play 1+PLY,3 : ENGINE(PLY)=3
                     Screen 1+PLY
                     Paste Bob X Bob(6+PLY),Y Bob(6+PLY)+1,T(PLY)+108
                     If PNT_X(1)>PNT_X(0)-6 and PNT_X(1)<PNT_X(0)+6 and PNT_Y(1)>PNT_Y(0)-6 and PNT_Y(1)<PNT_Y(0)+6
                        X1=CAR_X(PLY)/SPEED(PLY)+((PNT_X(PLY)-PNT_X(1-PLY))*16)+56+WX(PLY)
                        Y1=CAR_Y(PLY)/SPEED(PLY)+((PNT_Y(PLY)-PNT_Y(1-PLY))*16)+62+WY(PLY)
                        Screen 2-PLY
                        Paste Bob X1,Y1,T(PLY)+108
                     End If 
                  Else 
                     If SPDO(PLY)=182
                        Sam Play 8/(1+PLY),6 : ENGINE(PLY)=8 : CS(PLY)=0
                     End If 
                  End If 
               End If 
            End If 
         End If 
      End If 
      If Jdown(PLY)
         If SPDO(PLY)>181 and HIT(PLY)=0
            _BRAKE[PLY]
            If ENGINE(PLY)=3 and Deek(S(PLY))<41
               Screen 1+PLY
               Sam Play 1+PLY,5 : ENGINE(PLY)=2
               Paste Bob X Bob(6+PLY),Y Bob(6+PLY)+1,T(PLY)+108
               If PNT_X(1)>PNT_X(0)-6 and PNT_X(1)<PNT_X(0)+6 and PNT_Y(1)>PNT_Y(0)-6 and PNT_Y(1)<PNT_Y(0)+6
                  X1=CAR_X(PLY)/SPEED(PLY)+((PNT_X(PLY)-PNT_X(1-PLY))*16)+56+WX(PLY)
                  Y1=CAR_Y(PLY)/SPEED(PLY)+((PNT_Y(PLY)-PNT_Y(1-PLY))*16)+62+WY(PLY)
                  Screen 2-PLY
                  Paste Bob X1,Y1,T(PLY)+106
               End If 
            End If 
         End If 
      End If 
   End If 
   If HIT(PLY)=0 and SKID(PLY)<1
      If Jright(PLY)
         Add T(PLY),1,1 To 36
      End If 
      If Jleft(PLY)
         Add T(PLY),-1,1 To 36
      End If 
   End If 
End Proc
Procedure _ANY_HITS[PLY]
   If Deek(S(PLY))>40
      If Deek(S(PLY))>80 and Deek(S(PLY))<197
         NO_HIT(PLY)=0
         If Deek(S(PLY))<161 : Rem Soil / Grass marks 
            Screen 1+PLY
            Paste Bob CAR_X(PLY)/SPEED(PLY)+56+WX(PLY),CAR_Y(PLY)/SPEED(PLY)+63+WY(PLY),T(PLY)+36+36
         End If 
         ' *** cracks etc ***   
         If SPEED(PLY)<512 and SKID(PLY)=0
            Add T(PLY),Rnd(2)-1,1 To 36
         End If 
         If SPDO(PLY)=187 and HIT(PLY)=0 and SKID(PLY)=0
            SKID(PLY)=3 : TURN(PLY)=Rnd(1)
            If TURN(PLY)=0 : TURN(PLY)=-1 : End If 
            HOLD_T(PLY)=T(PLY)
            Sam Play 1+PLY,7 : WD(PLY)=20
            If Deek(S(PLY))<161
               SKID(PLY)=11
            End If 
         End If 
         If SPEED(PLY)<64 and SKID(PLY)=0
            _BRAKE[PLY]
         End If 
      Else 
         If Deek(S(PLY))>196 and Deek(S(PLY))<309 : Rem Objects (hit)
            If Deek(S(PLY))>288 and Deek(S(PLY))<301 : Rem PICK UPS 
               S=S(PLY) : PL=1-PLY
               X=CAR_X(PLY)/SPEED(PLY)/16*16+80 : Y=CAR_Y(PLY)/SPEED(PLY)/16*16+80
               X1=CAR_X(PLY)/SPEED(PLY)+(PNT_X(PLY)-PNT_X(PL))*16+56+WX(PLY)
               Y1=CAR_Y(PLY)/SPEED(PLY)+(PNT_Y(PLY)-PNT_Y(PL))*16+62+WY(PLY)
               If Deek(S(PLY))<297
                  CALC=230*PLY
                  JMP=Deek(S(PLY))-288
                  If Rnd(1)=0 and ROCKETS(PLY)<6
                     Inc ROCKETS(PLY)
                     Sam Play 1+PLY,8,22222
                     Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
                     Screen 0
                     Put Block 394,CALC+16,240 : Rem picked up rocket 
                     Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),230*PLY,221
                     _TYPE[CALC+70,181,Str$(ROCKETS(PLY)),1]
                     Screen Copy 0,CALC+70,181,CALC+86,187 To Physic(0),CALC+70,181
                     Screen 1+PLY
                     On JMP Goto S1,S2,S3,S4,R1,R2,R3,R4
                  Else 
                     If BOMBS(PLY)<8
                        Inc BOMBS(PLY)
                        Sam Play 1+PLY,8,22222
                        Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
                        Screen 0
                        Put Block 396,CALC+16,240 : Rem picked up mines  
                        Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),230*PLY,221
                        _TYPE[CALC+8,181,Str$(BOMBS(PLY))+" ",1]
                        Screen Copy 0,CALC+8,181,CALC+24,187 To Physic(0),CALC+8,181
                        Screen 1+PLY
                        On JMP Goto S1,S2,S3,S4,R1,R2,R3,R4
                     End If 
                  End If 
                  If ROCKETS(PLY)=6 and BOMBS(PLY)=8
                     Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
                     Screen 0 : Put Block 398,CALC+16,240 : Rem weapons full   
                     Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),230*PLY,221
                  End If 
               Else 
                  JMP=Deek(S(PLY))-296
                  If FUEL(PLY)<23
                     Sam Play 1+PLY,8,22222
                     Screen Copy 0,230*PLY+16,234,230*PLY+80,246 To 0,230*PLY+16,228
                     Screen 0 : Put Block 395,230*PLY+16,240 : Rem picked up fuel 
                     Screen Copy Logic(0),230*PLY,221,230*PLY+80,251 To Physic(0),230*PLY,221
                     '
                     Add FUEL(PLY),3 : FUEL_C(PLY)=500 : NO_FUEL(PLY)=0
                     Sprite 7-PLY,281,68*PLY+100-FUEL(PLY),191
                     Screen 1+PLY
                     On JMP Goto S1,S2,S3,S4
                  Else 
                     If FUEL(PLY)<25
                        Sam Play 1+PLY,8,22222
                        FUEL(PLY)=25 : FUEL_C(PLY)=500 : NO_FUEL(PLY)=0
                        Sprite 7-PLY,281,68*PLY+100-FUEL(PLY),191
                        '
                        Screen Copy 0,230*PLY+16,234,230*PLY+80,246 To 0,230*PLY+16,228
                        Screen 0 : Put Block 387,230*PLY+16,240 : Rem  FUEL TANK FULL
                        Screen Copy Logic(0),230*PLY,221,230*PLY+80,251 To Physic(0),230*PLY,221
                        Screen 1+PLY
                        On JMP Goto S1,S2,S3,S4
                     End If 
                  End If 
               End If 
               ' This piece of code goes against all structured programming rules.  
               ' But it is faster & takes up far less space than not using GOTO's.  
               Pop Proc
               S1:
               CX=0 : CY=0 : Goto PATH1
               S2:
               CX=-16 : CY=0 : Add S,-2 : Goto PATH1
               S3:
               CX=0 : CY=-16 : Add S,-256 : Goto PATH1
               S4:
               CY=-16 : CX=-16 : Add S,-258 : Goto PATH1
               R1:
               CX=0 : CY=0 : Goto PATH2
               R2:
               CX=-16 : CY=0 : Add S,-2 : Goto PATH2
               R3:
               CX=0 : CY=-16 : Add S,-256 : Goto PATH2
               R4:
               CY=-16 : CX=-16 : Add S,-258 : Goto PATH2
               PATH1:
               Add X,CX : Add Y,CY
               Put Block 139,X,Y : Put Block 139,X+16,Y
               Put Block 139,X,Y+16 : Put Block 139,X+16,Y+16
               Doke S,139 : Doke S+2,139
               Doke S+256,139 : Doke S+258,139
               If PNT_X(PL)>PNT_X(PLY)-6 and PNT_X(PL)<PNT_X(PLY)+6 and PNT_Y(PL)>PNT_Y(PLY)-6 and PNT_Y(PL)<PNT_Y(PLY)+6
                  Screen 2-PLY
                  Bob PL,X1,Y1,36*PL+T(PL)
                  X1=X-CX-X Bob(6+PLY)+X Bob(PL)+CX
                  Y1=Y-CY-Y Bob(6+PLY)+Y Bob(PL)+CY
                  Put Block 139,X1,Y1 : Put Block 139,X1+16,Y1
                  Put Block 139,X1,Y1+16 : Put Block 139,X1+16,Y1+16
               End If 
               Pop Proc
               PATH2:
               Add X,CX : Add Y,CY
               Put Block 1,X,Y : Put Block 1,X+16,Y
               Put Block 1,X,Y+16 : Put Block 1,X+16,Y+16
               Doke S,1 : Doke S+2,1
               Doke S+256,1 : Doke S+258,1
               If PNT_X(PL)>PNT_X(PLY)-6 and PNT_X(PL)<PNT_X(PLY)+6 and PNT_Y(PL)>PNT_Y(PLY)-6 and PNT_Y(PL)<PNT_Y(PLY)+6
                  Screen 2-PLY
                  Bob PL,X1,Y1,36*PL+T(PL)
                  X1=X-CX-X Bob(6+PLY)+X Bob(PL)+CX
                  Y1=Y-CY-Y Bob(6+PLY)+Y Bob(PL)+CY
                  Put Block 1,X1,Y1 : Put Block 1,X1+16,Y1
                  Put Block 1,X1,Y1+16 : Put Block 1,X1+16,Y1+16
               End If 
               Pop Proc
            Else 
               NO_HIT(PLY)=0
               If SPDO(PLY)<186
                  _ACCELERATE[PLY]
               End If 
               If HIT(PLY)=0
                  Add DAMAGE(PLY),SPDO(PLY)-182
                  WD(PLY)=20 : _HIT_DAMAGE[PLY]
                  If SKID(PLY)>0
                     SKID(PLY)=0 : T(PLY)=HOLD_T(PLY) : Rem old path restored
                  End If 
                  While SPDO(PLY)>182
                     _BRAKE[PLY]
                  Wend 
                  Sam Play 1+PLY,2
               End If 
               HIT(PLY)=1
            End If 
         Else 
            If Deek(S(PLY))<197
               If SPEED(PLY)<512
                  Add T(PLY),Rnd(2)-1,1 To 36
               End If 
            End If 
         End If 
         If Deek(S(PLY))>308 and Deek(S(PLY))<315
            If NO_HIT(PLY)<1
               Screen PLY+1
               PL=1-PLY
               X=CAR_X(PLY)/SPEED(PLY)/16*16+80 : Y=CAR_Y(PLY)/SPEED(PLY)/16*16+80
               X1=CAR_X(PLY)/SPEED(PLY)+(PNT_X(PLY)-PNT_X(PL))*16+56+WX(PLY)
               Y1=CAR_Y(PLY)/SPEED(PLY)+(PNT_Y(PLY)-PNT_Y(PL))*16+62+WY(PLY)
               If Deek(S(PLY))=309
                  HOLD_T(PLY)=Rnd(9)+27
                  Bob(PL)*2+9,X-4,Y-4,191
                  Put Block 181,X,Y : Put Block 182,X+16,Y
                  Put Block 183,X,Y+16 : Put Block 184,X+16,Y+16
                  If PNT_X(PL)>PNT_X(PLY)-6 and PNT_X(PL)<PNT_X(PLY)+6 and PNT_Y(PL)>PNT_Y(PLY)-6 and PNT_Y(PL)<PNT_Y(PLY)+6
                     Screen 2-PLY : EX(PL)=1
                     Bob PL,X1,Y1,36*PL+T(PL)
                     X1=X-X Bob(6+PLY)+X Bob(PL)
                     Y1=Y-Y Bob(6+PLY)+Y Bob(PL)
                     Put Block 181,X1,Y1 : Put Block 182,X1+16,Y1
                     Put Block 183,X1,Y1+16 : Put Block 184,X1+16,Y1+16
                     MNE_X(PL)=X1-4 : MNE_Y(PL)=Y1-4
                     Bob(PL)*2+8,MNE_X(PL),MNE_Y(PL),191
                  End If 
                  Doke S(PLY),181 : Doke S(PLY)+2,182
                  Doke S(PLY)+256,183 : Doke S(PLY)+258,184
               End If 
               If Deek(S(PLY))=310
                  HOLD_T(PLY)=Rnd(8)+1
                  Bob(PL)*2+9,X-20,Y-4,191
                  Put Block 181,X-16,Y : Put Block 182,X,Y
                  Put Block 183,X-16,Y+16 : Put Block 184,X,Y+16
                  If PNT_X(PL)>PNT_X(PLY)-6 and PNT_X(PL)<PNT_X(PLY)+6 and PNT_Y(PL)>PNT_Y(PLY)-6 and PNT_Y(PL)<PNT_Y(PLY)+6
                     Screen 2-PLY : EX(PL)=1
                     Bob PL,X1,Y1,36*PL+T(PL)
                     X1=X-X Bob(6+PLY)+X Bob(PL)
                     Y1=Y-Y Bob(6+PLY)+Y Bob(PL)
                     Put Block 182,X1,Y1 : Put Block 181,X1-16,Y1
                     Put Block 184,X1,Y1+16 : Put Block 183,X1-16,Y1+16
                     MNE_X(PL)=X1-20 : MNE_Y(PL)=Y1-4
                     Bob(PL)*2+8,MNE_X(PL),MNE_Y(PL),191
                  End If 
                  Doke S(PLY)-2,181 : Doke S(PLY),182
                  Doke S(PLY)+254,183 : Doke S(PLY)+256,184
               End If 
               If Deek(S(PLY))=311
                  HOLD_T(PLY)=Rnd(9)+18
                  Bob(PL)*2+9,X-4,Y-20,191
                  Put Block 181,X,Y-16 : Put Block 182,X+16,Y-16
                  Put Block 183,X,Y : Put Block 184,X+16,Y
                  If PNT_X(PL)>PNT_X(PLY)-6 and PNT_X(PL)<PNT_X(PLY)+6 and PNT_Y(PL)>PNT_Y(PLY)-6 and PNT_Y(PL)<PNT_Y(PLY)+6
                     Screen 2-PLY : EX(PL)=1
                     Bob PL,X1,Y1,36*PL+T(PL)
                     X1=X-X Bob(6+PLY)+X Bob(PL)
                     Y1=Y-Y Bob(6+PLY)+Y Bob(PL)
                     Put Block 183,X1,Y1 : Put Block 184,X1+16,Y1
                     Put Block 181,X1,Y1-16 : Put Block 182,X1+16,Y1-16
                     MNE_X(PL)=X1-4 : MNE_Y(PL)=Y1-20
                     Bob(PL)*2+8,MNE_X(PL),MNE_Y(PL),191
                  End If 
                  Doke S(PLY)-256,181 : Doke S(PLY)-254,182
                  Doke S(PLY),183 : Doke S(PLY)+2,184
               End If 
               If Deek(S(PLY))=312
                  HOLD_T(PLY)=Rnd(9)+9
                  Put Block 182,X,Y-16 : Put Block 181,X-16,Y-16
                  Put Block 184,X,Y : Put Block 183,X-16,Y
                  Bob(PL)*2+9,X-20,Y-20,191
                  If PNT_X(PL)>PNT_X(PLY)-6 and PNT_X(PL)<PNT_X(PLY)+6 and PNT_Y(PL)>PNT_Y(PLY)-6 and PNT_Y(PL)<PNT_Y(PLY)+6
                     Screen 2-PLY : EX(PL)=1
                     Bob PL,X1,Y1,36*PL+T(PL)
                     X1=X-X Bob(6+PLY)+X Bob(PL)
                     Y1=Y-Y Bob(6+PLY)+Y Bob(PL)
                     Put Block 184,X1,Y1 : Put Block 183,X1-16,Y1
                     Put Block 182,X1,Y1-16 : Put Block 181,X1-16,Y1-16
                     MNE_X(PL)=X1-20 : MNE_Y(PL)=Y1-20
                     Bob(PL)*2+8,MNE_X(PL),MNE_Y(PL),191
                  End If 
                  Doke S(PLY)-256,182 : Doke S(PLY)-258,181
                  Doke S(PLY),184 : Doke S(PLY)-2,183
               End If 
               SKID(PLY)=22 : WD(PLY)=20
               TURN(PLY)=Rnd(1) : If TURN(PLY)=0 : TURN(PLY)=-1 : End If 
               MISSILE_HIT(PL)=7
               While SPDO(PLY)<184
                  _ACCELERATE[PLY]
               Wend 
               While SPDO(PLY)>185
                  _BRAKE[PLY]
               Wend 
               Sam Play 1+PLY,1
               Proc _MINE_DAMAGE[PLY]
            Else 
               Dec NO_HIT(PLY)
            End If 
         End If 
      End If 
   Else 
      NO_HIT(PLY)=0
      If Deek(S(PLY))>38
         CALC=230*PLY
         If CHECK_POINT(PLY)=40 and Deek(S(PLY))=39
            Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
            Screen 0 : Put Block 392,CALC+16,240 : Rem half way 
            CHECK_POINT(PLY)=39
            Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),CALC,221
         End If 
         If CHECK_POINT(PLY)=39 and Deek(S(PLY))=40
            Screen Copy 0,CALC+16,234,CALC+80,246 To 0,CALC+16,228
            Screen 0 : Put Block 393,CALC+16,240 : Rem lap conpleted
            Inc LAPS(PLY) : CHECK_POINT(PLY)=40
            _TYPE2[PLY*80+112,232,Str$(LAPS(PLY))-" "]
            Screen Copy Logic(0),96,232,224,252 To Physic(0),96,232
            Screen Copy Logic(0),CALC,221,CALC+80,251 To Physic(0),CALC,221
            If LAPS(PLY)=LAPS : QUIT=PLY+3 : End If 
         End If 
      End If 
      If Deek(S(PLY))>26 and Deek(S(PLY))<31
         If DAMAGE(PLY)>0 and _FIX(PLY)<0
            _FIX(PLY)=5
            Screen 0 : Dec DAMAGE(PLY)
            X=230*PLY
            If DAMAGE(PLY)=0
               Screen Copy 0,X+16,234,X+80,246 To 0,X+16,228
               Screen 0 : Put Block 397,X+16,240 : Rem car repaired 
               Screen Copy Logic(0),X,221,X+80,251 To Physic(0),X,221
            End If 
            _TYPE[X+54,221,Str$(DAMAGE(PLY))+"% ",1]
            Screen Copy Logic(0),X,221,X+80,251 To Physic(0),X,221
         Else 
            Dec _FIX(PLY)
         End If 
         If FUEL(PLY)<25
            Inc FUEL(PLY) : FUEL_C(PLY)=500 : NO_FUEL(PLY)=0
            Sprite 7-PLY,281,68*PLY+100-FUEL(PLY),191
            If FUEL(PLY)=25
               Screen Copy 0,230*PLY+16,234,230*PLY+80,246 To 0,230*PLY+16,228
               Screen 0 : Put Block 387,230*PLY+16,240 : Rem  FUEL TANK FULL
               Screen Copy Logic(0),230*PLY,221,230*PLY+80,251 To Physic(0),230*PLY,221
            Else 
               If SPEED(PLY)<1024
                  _BRAKE[PLY]
               End If 
            End If 
         End If 
      End If 
   End If 
   If WD(PLY)=0
      Screen 0 : Put Block 314,230*PLY+22,163 : Rem stop damage
      Screen Copy Logic(0),230*PLY,163,230*PLY+80,220 To Physic(0),230*PLY,163
      WD(PLY)=-1
   Else 
      Dec WD(PLY)
   End If 
End Proc
Procedure _ANY_HITS_DEMO[PLY]
   If Deek(S(PLY))>40
      If Deek(S(PLY))>80 and Deek(S(PLY))<197
         NO_HIT(PLY)=0
         If Deek(S(PLY))<161 : Rem Soil / Grass marks 
            Screen 1+PLY
            Paste Bob CAR_X(PLY)/SPEED(PLY)+56+WX(PLY),CAR_Y(PLY)/SPEED(PLY)+63+WY(PLY),T(PLY)+36+36
         End If 
         ' *** cracks etc ***   
         If SPEED(PLY)<512 and SKID(PLY)=0
            Add T(PLY),Rnd(2)-1,1 To 36
         End If 
         If SPEED(PLY)=16 and HIT(PLY)=0 and SKID(PLY)=0
            SKID(PLY)=3 : TURN(PLY)=Rnd(1)
            If TURN(PLY)=0 : TURN(PLY)=-1 : End If 
            HOLD_T(PLY)=T(PLY)
            WD(PLY)=20
            If Deek(S(PLY))<161
               SKID(PLY)=11
            End If 
         End If 
         If SPEED(PLY)<64 and SKID(PLY)=0
            _BRAKE[PLY]
         End If 
      Else 
         If Deek(S(PLY))>196 and Deek(S(PLY))<288 : Rem Objects (hit)
            NO_HIT(PLY)=0
            HIT(PLY)=1
            If HIT(PLY)=0
               Add DAMAGE(PLY),SPDO(PLY)-182
               WD(PLY)=20
               _HIT_DAMAGE[PLY]
               If SKID(PLY)>0
                  SKID(PLY)=0 : T(PLY)=HOLD_T(PLY)
               End If 
               While SPDO(PLY)>183
                  _BRAKE[PLY]
               Wend 
            End If 
         Else 
            If Deek(S(PLY))<197 and SPEED(PLY)<512
               Add T(PLY),Rnd(2)-1,1 To 36
            End If 
         End If 
      End If 
   Else 
      NO_HIT(PLY)=0
      If Deek(S(PLY))>38
         CALC=230*PLY
         If CHECK_POINT(PLY)=40 and Deek(S(PLY))=39
            CHECK_POINT(PLY)=39
         End If 
         If CHECK_POINT(PLY)=39 and Deek(S(PLY))=40
            QUIT=3
         End If 
      End If 
   End If 
End Proc
Procedure _UPDATE_SCREEN
   CARX1=CAR_X(1)/SPEED(1) : CARY1=CAR_Y(1)/SPEED(1)
   CARX0=CAR_X(0)/SPEED(0) : CARY0=CAR_Y(0)/SPEED(0)
   S(0)=(CARX0/16+5+PNT_X(0))*2+(CARY0/16+5+PNT_Y(0))*256+ADR
   S(1)=(CARX1/16+5+PNT_X(1))*2+(CARY1/16+5+PNT_Y(1))*256+ADR
   _ANY_HITS[0]
   _ANY_HITS[1]
   _SKID[0]
   _RECALC_MOVES[0]
   _SKID[1]
   _RECALC_MOVES[1]
   _MISSILE[0]
   _MISSILE[1]
   Screen 1 : Bob 6,CARX0+WX(0)+56,CARY0+WY(0)+62,T(0)
   Screen 2 : Bob 7,CARX1+WX(1)+56,CARY1+WY(1)+62,T(1)+36
   If PNT_X(1)>PNT_X(0)-6 and PNT_X(1)<PNT_X(0)+6 and PNT_Y(1)>PNT_Y(0)-6 and PNT_Y(1)<PNT_Y(0)+6
      X1=(PNT_X(0)-PNT_X(1))*16+56+WX(0)+CARX0
      Y1=(PNT_Y(0)-PNT_Y(1))*16+62+WY(0)+CARY0
      Bob 1,X1,Y1,T(0)
      If Deek(S(0))>80 and Deek(S(0))<161
         Paste Bob X1,Y1,T(0)+72
      End If 
      Screen 1
      X2=(PNT_X(1)-PNT_X(0))*16+56+WX(1)+CARX1
      Y2=(PNT_Y(1)-PNT_Y(0))*16+62+WY(1)+CARY1
      Bob 0,X2,Y2,T(1)+36
      If Deek(S(1))>80 and Deek(S(1))<161
         Paste Bob X2,Y2,T(1)+72
      End If 
   Else 
      Bob Off 1 : Bob Off 0
   End If 
   If MISSILE_HIT(0)>0
      '*** Animate Explosion Part ***    
      Dec MISSILE_HIT(0)
      MX=RCX(0)+(PNTMX(0)-PNT_X(0)-4)*16+WMX(0)+64
      MY=RCY(0)+(PNTMY(0)-PNT_Y(0)-4)*16+WMY(0)+64
      Screen 2 : Bob 9,,,I Bob(9)+1
      If EX(0)=1
         Screen 1 : Bob 8,MNE_X(0),MNE_Y(0),I Bob(9)
      End If 
      If MISSILE_HIT(0)=0
         Bob Off 8 : Bob Off 9 : EX(0)=0 : WD(1)=20
      End If 
   Else 
      If Bob Col(7,3 To 3)
         MIS_ON(0)=0
         Sam Play 2,1
         MISSILE_HIT(0)=7 : Sprite Off 4
         MX=RCX(0)+(PNTMX(0)-PNT_X(0)-4)*16+64+WMX(0)
         MY=RCY(0)+(PNTMY(0)-PNT_Y(0)-4)*16+64+WMY(0)
         If MX>-16 and MX<176 and MY>-16 and MY<176
            MNE_X(0)=X Bob(0)-12
            MNE_Y(0)=Y Bob(0)-12
            Screen 1 : Bob 8,MNE_X(0),MNE_Y(0),192
            EX(0)=1
         End If 
         Screen 2 : Bob 9,X Bob(3)-12,Y Bob(3)-12,192
         Bob Off 2 : Bob Off 3 : Screen 0
         Proc _MISSILE_DAMAGE[0]
      End If 
   End If 
   '
   If MISSILE_HIT(1)>0
      Dec MISSILE_HIT(1)
      MX=RCX(1)+(PNTMX(1)-PNT_X(1)-4)*16+WMX(1)+64
      MY=RCY(1)+(PNTMY(1)-PNT_Y(1)-4)*16+WMY(1)+64
      Screen 1 : Bob 11,,,I Bob(11)+1
      If EX(1)=1
         Screen 2 : Bob 10,MNE_X(1),MNE_Y(1),I Bob(11)
      End If 
      If MISSILE_HIT(1)=0
         Bob Off 10 : Bob Off 11 : EX(1)=0 : WD(0)=20
      End If 
   Else 
      If Bob Col(6,5 To 5)
         MIS_ON(1)=0
         Sam Play 1,1
         MISSILE_HIT(1)=7 : Sprite Off 5
         MX=RCX(1)+(PNTMX(1)-PNT_X(1)-4)*16+64+WMX(1)
         MY=RCY(1)+(PNTMY(1)-PNT_Y(1)-4)*16+64+WMY(1)
         If MX>-16 and MX<176 and MY>-16 and MY<176
            MNE_X(1)=X Bob(4)-12
            MNE_Y(1)=Y Bob(4)-12
            Screen 2 : Bob 10,MNE_X(1),MNE_Y(1),192
            EX(1)=1
         End If 
         Screen 1 : Bob 11,X Bob(5)-12,Y Bob(5)-12,192
         Bob Off 4 : Bob Off 5 : Screen 0
         Proc _MISSILE_DAMAGE[1]
      End If 
   End If 
   '---------------------------------------------------------------   
   Bob Draw 
   ' ***Copy new screen information***
   Screen Copy 2,WX(1),WY(1),WX(1)+144,WY(1)+144 To 0,176,4
   Screen Copy 1,WX(0),WY(0),WX(0)+144,WY(0)+144 To 0,0,4
   '--------------------------------------------------------------- 
   ' ***SPEEDO*** 
   Sprite 0,128,118,SPDO(0) : Sprite 1,432,118,SPDO(1)
   ' *** Map marker *** 
   Sprite 2,CARX0/16+228+PNT_X(0),CARY0/16+PNT_Y(0)+198,190
   Sprite 3,CARX1/16+228+PNT_X(1),CARY1/16+PNT_Y(1)+198,189
   Bob Clear 
   Vbl Wait 149 : Screen Swap 
   If DAMAGE(0)>=100 : QUIT=1 : End If 
   If DAMAGE(1)>=100 : QUIT=2 : End If 
   If FUEL_C(0)<0
      If FUEL(0)=0
         If NO_FUEL(0)=0
            Screen Copy 0,16,234,80,246 To 0,16,228
            Screen 0 : Put Block 385,16,240 : Rem out of fuel
            Screen Copy Logic(0),16,221,80,251 To Physic(0),16,221
            NO_FUEL(0)=1
         End If 
         If SPEED(0)<256
            _BRAKE[0]
         End If 
      Else 
         If FUEL(0)=6
            Screen Copy 0,16,234,80,246 To 0,16,228
            Screen 0 : Put Block 384,16,240 : Rem fuel low 
            Screen Copy Logic(0),16,221,80,251 To Physic(0),16,221
         End If 
         Sprite 7,281,100-FUEL(0),191
         Dec FUEL(0) : FUEL_C(0)=400
      End If 
   Else 
      Add FUEL_C(0),181-SPDO(0)
   End If 
   '--------------------------------------------------------------- 
   If FUEL_C(1)<0
      If FUEL(1)=0
         If NO_FUEL(1)=0
            Screen Copy 0,246,234,310,246 To 0,246,228
            Screen 0 : Put Block 385,246,240 : Rem out of fuel
            Screen Copy Logic(0),246,221,310,251 To Physic(0),246,221
            NO_FUEL(1)=1
         End If 
         If SPEED(1)<256
            _BRAKE[1]
         End If 
      Else 
         If FUEL(1)=6
            Screen Copy 0,246,234,310,246 To 0,246,228
            Screen 0 : Put Block 384,246,240
            Screen Copy Logic(0),230,221,310,251 To Physic(0),230,221
         End If 
         Sprite 6,281,168-FUEL(1),191
         Dec FUEL(1) : FUEL_C(1)=400
      End If 
   Else 
      Add FUEL_C(1),181-SPDO(1)
   End If 
   ' *** Car hits car ***   
   If Bob Col(6,0 To 0)
      If SPDO(0)>181 or SPDO(1)>181
         If SPDO(0)=SPDO(1)
            Sam Play 7,2
            If Rnd(1)=0
               SKID(1)=SPDO(0)-179 : TURN(1)=0
               HOLD_T(1)=T(0)
               Add DAMAGE(1),SPDO(1)-181 : WD(1)=20
               Screen 0 : _TYPE[284,221,Str$(DAMAGE(1))+"%",1]
               Screen Copy Logic(0),272,221,310,251 To Physic(0),272,221
               Put Block 317,252,163
            Else 
               SKID(0)=SPDO(1)-179 : TURN(0)=0
               HOLD_T(0)=T(1)
               Add DAMAGE(0),SPDO(0)-181 : WD(0)=20
               Screen 0 : _TYPE[54,221,Str$(DAMAGE(0))+"%",1]
               Screen Copy Logic(0),48,221,80,251 To Physic(0),48,221
               Put Block 317,22,163
            End If 
         Else 
            If SPDO(0)>SPDO(1)
               Sam Play 7,2
               SKID(1)=SPDO(0)-175
               If SPDO(0)<185
                  TURN(1)=0
               Else 
                  TURN(1)=Rnd(2)-1
               End If 
               CAR_HIT(0)=4 : HOLD_T(1)=T(0)
               Repeat 
                  _ACCELERATE[1]
               Until SPDO(1)>185 and SPDO(1)>=SPDO(0)
               If SPDO(0)>181
                  _BRAKE[0]
               End If 
               Add DAMAGE(1),SPDO(0)-181 : WD(1)=20
               Screen 0 : _TYPE[284,221,Str$(DAMAGE(1))+"%",1]
               Screen Copy Logic(0),272,221,310,251 To Physic(0),272,221
               Put Block 317,252,163
            Else 
               Sam Play 7,2
               SKID(0)=SPDO(1)-175
               If SPDO(1)<185
                  TURN(0)=0
               Else 
                  TURN(0)=Rnd(2)-1
               End If 
               CAR_HIT(1)=4 : HOLD_T(0)=T(1)
               Repeat 
                  _ACCELERATE[0]
               Until SPDO(0)>185 and SPDO(0)>=SPDO(1)
               If SPDO(1)>181
                  _BRAKE[1]
               End If 
               Add DAMAGE(0),SPDO(1)-181 : WD(0)=20
               Screen 0 : _TYPE[54,221,Str$(DAMAGE(0))+"%",1]
               Screen Copy Logic(0),48,221,80,251 To Physic(0),48,221
               Put Block 317,22,163
            End If 
         End If 
      End If 
      If HIT(0)=1 and SPDO(1)>181
         SKID(1)=10 : TURN(1)=0
         HOLD_T(1)=T(1)+18
         If HOLD_T(1)>36
            HOLD_T(1)=18-(36-T(1))
         End If 
         While SPDO(1)<SPDO(0)
            _ACCELERATE[1]
            _BRAKE[0]
         Wend 
         If SPDO(1)<187 : _ACCELERATE[1] : End If 
         HIT(0)=0
      End If 
      If HIT(1)=1 and SPDO(0)>181
         SKID(0)=10 : TURN(0)=0
         HOLD_T(0)=T(0)+18
         If HOLD_T(0)>36
            HOLD_T(0)=18-(36-T(0))
         End If 
         While SPDO(0)<SPDO(1)
            _BRAKE[1]
         Wend 
         If SPDO(0)<187 : _ACCELERATE[0] : End If 
         HIT(1)=0
      End If 
   End If 
End Proc
Procedure _DEMO_UPDATE
   CARX1=CAR_X(1)/SPEED(1) : CARY1=CAR_Y(1)/SPEED(1)
   CARX0=CAR_X(0)/SPEED(0) : CARY0=CAR_Y(0)/SPEED(0)
   S(0)=(CARX0/16+5+PNT_X(0))*2+(CARY0/16+5+PNT_Y(0))*256+ADR
   S(1)=(CARX1/16+5+PNT_X(1))*2+(CARY1/16+5+PNT_Y(1))*256+ADR
   _ANY_HITS_DEMO[0]
   _ANY_HITS_DEMO[1]
   _SKID[0] : _RECALC_MOVES[0]
   _SKID[1] : _RECALC_DEMO
   Screen 1 : Bob 6,CARX0+WX(0)+56,CARY0+WY(0)+62,T(0)
   If PNT_X(1)>PNT_X(0)-6 and PNT_X(1)<PNT_X(0)+6 and PNT_Y(1)>PNT_Y(0)-6 and PNT_Y(1)<PNT_Y(0)+6
      X1=(PNT_X(1)-PNT_X(0))*16+56+WX(1)+CARX1
      Y1=(PNT_Y(1)-PNT_Y(0))*16+62+WY(1)+CARY1
      Bob 0,X1,Y1,T(1)+36
      If Deek(S(1))>80 and Deek(S(1))<161
         Paste Bob X1,Y1,T(1)+72
      End If 
   Else 
      Bob Off 0
   End If 
   Bob Draw 
   Screen Copy 1,WX(0),WY(0),144+WX(0),144+WY(0) To 0,80,0
   Bob Clear : Vbl Wait 165 : Screen Swap 
   If Bob Col(6,0 To 0)
      Dec LVE
      If LVE=0
         QUIT=3
      End If 
      If SPEED(0)=SPEED(1) and SPDO(0)>181
         If Rnd(1)=0
            SKID(1)=SPDO(0)-179 : TURN(1)=0
            HOLD_T(1)=T(0)
         Else 
            SKID(0)=SPDO(1)-179 : TURN(0)=0
            HOLD_T(0)=T(1)
         End If 
      Else 
         If SPEED(0)<SPEED(1)
            SKID(1)=SPDO(0)-175
            If SPDO(0)<185
               TURN(1)=0
            Else 
               TURN(1)=Rnd(2)-1
            End If 
            HOLD_T(1)=T(0) : CAR_HIT(0)=4
            Repeat 
               _ACCELERATE[1]
            Until SPDO(1)>185 and SPDO(1)>=SPDO(0)
         Else 
            SKID(0)=SPDO(1)-175
            If SPDO(1)<185
               TURN(0)=0
            Else 
               TURN(0)=Rnd(2)-1
            End If 
            HOLD_T(0)=T(1) : CAR_HIT(1)=4
            Repeat 
               _ACCELERATE[0]
            Until SPDO(0)>185 and SPDO(0)>=SPDO(1)
         End If 
      End If 
      If HIT(0)=1 and SPDO(1)>181
         SKID(1)=10 : TURN(1)=0
         HOLD_T(1)=T(1)+18
         If HOLD_T(1)>36
            HOLD_T(1)=18-(36-T(1))
         End If 
         While SPDO(1)<SPDO(0)
            _ACCELERATE[1]
            _BRAKE[0]
         Wend 
         If SPDO(1)<187 : _ACCELERATE[1] : End If 
         HIT(0)=0
      End If 
      If HIT(1)=1 and SPDO(0)>181
         SKID(0)=10 : TURN(0)=0
         HOLD_T(0)=T(0)+18
         If HOLD_T(0)>36
            HOLD_T(0)=18-(36-T(0))
         End If 
         While SPDO(0)<SPDO(1)
            _BRAKE[1]
         Wend 
         If SPDO(0)<187 : _ACCELERATE[0] : End If 
         HIT(1)=0
      End If 
   Else 
      LVE=7
   End If 
End Proc
Procedure _RECALC_MOVES[PLY]
   If SPDO(PLY)>181
      If SCRL_X(PLY)=0
         Add X(PLY),PX(T)
         WX(PLY)=X(PLY)/SPEED(PLY)
         If WX(PLY)>32
            _SCRL_RIGHT[PLY]
         End If 
         If WX(PLY)<0
            _SCRL_LEFT[PLY]
         End If 
         If PNT_X(PLY)=117 and PX(T)>0
            SCRL_X(PLY)=1
         End If 
         If PNT_X(PLY)=0 and PX(T)<0
            SCRL_X(PLY)=2
         End If 
      Else 
         If SCRL_X(PLY)=2
            Add CAR_X(PLY),PX(T)
            If CAR_X(PLY)<-64*SPEED(PLY)
               CAR_X(PLY)=-64*SPEED(PLY)
               '   _BRAKE[PLY]
            End If 
            If CAR_X(PLY)>0
               CAR_X(PLY)=0 : SCRL_X(PLY)=0
            End If 
         Else 
            Add CAR_X(PLY),PX(T)
            If CAR_X(PLY)>64*SPEED(PLY)
               CAR_X(PLY)=64*SPEED(PLY)
               '     _BRAKE[PLY]
            End If 
            If CAR_X(PLY)<0
               CAR_X(PLY)=0 : SCRL_X(PLY)=0
            End If 
         End If 
      End If 
      If SCRL_Y(PLY)=0
         Add Y(PLY),PY(T)
         WY(PLY)=Y(PLY)/SPEED(PLY)
         If WY(PLY)<0
            _SCRL_UP[PLY]
         End If 
         If WY(PLY)>32
            _SCRL_DOWN[PLY]
         End If 
         If PNT_Y(PLY)=0 and PY(T)<0
            SCRL_Y(PLY)=2
         End If 
         If PNT_Y(PLY)=53 and PY(T)>0
            SCRL_Y(PLY)=1
         End If 
      Else 
         If SCRL_Y(PLY)=2
            Add CAR_Y(PLY),PY(T)
            If CAR_Y(PLY)<-64*SPEED(PLY)
               CAR_Y(PLY)=-64*SPEED(PLY)
               '    _BRAKE[PLY] 
            End If 
            If CAR_Y(PLY)>0
               CAR_Y(PLY)=0 : SCRL_Y(PLY)=0
            End If 
         Else 
            Add CAR_Y(PLY),PY(T)
            If CAR_Y(PLY)>64*SPEED(PLY)
               CAR_Y(PLY)=64*SPEED(PLY)
               '     _BRAKE[PLY]
            End If 
            If CAR_Y(PLY)<0
               CAR_Y(PLY)=0 : SCRL_Y(PLY)=0
            End If 
         End If 
      End If 
   End If 
End Proc
Procedure _RECALC_DEMO
   If SPDO(1)>181
      If SCRL_X(1)=0
         Add X(1),PX(T)
         WX(1)=X(1)/SPEED(1)
         If WX(1)>32
            Add SS(1),2 : Inc PNT_X(1)
            Add WX(1),-16 : X(1)=WX(1)*SPEED(1)
         End If 
         If WX(1)<0
            Add SS(1),-2 : Dec PNT_X(1)
            Add WX(1),16 : X(1)=WX(1)*SPEED(1)
         End If 
         If PNT_X(1)=0 and PX(T)<0
            SCRL_X(1)=2
         End If 
         If PNT_X(1)=117 and PX(T)>0
            SCRL_X(1)=1
         End If 
      Else 
         If SCRL_X(1)=2
            Add CAR_X(1),PX(T)
            If CAR_X(1)<-64*SPEED(1)
               CAR_X(1)=-64*SPEED(1)
               '            _BRAKE[1] 
            End If 
            If CAR_X(1)>0
               CAR_X(1)=0 : SCRL_X(1)=0
            End If 
         Else 
            Add CAR_X(1),PX(T)
            If CAR_X(1)>64*SPEED(1)
               CAR_X(1)=64*SPEED(1)
               '           _BRAKE[1]
            End If 
            If CAR_X(1)<0
               CAR_X(1)=0 : SCRL_X(1)=0
            End If 
         End If 
      End If 
      If SCRL_Y(1)=0
         Add Y(1),PY(T)
         WY(1)=Y(1)/SPEED(1)
         If WY(1)<0
            Add SS(1),-256 : Dec PNT_Y(1)
            Add WY(1),16 : Y(1)=WY(1)*SPEED(1)
         End If 
         If WY(1)>32
            Add SS(1),256 : Inc PNT_Y(1)
            Add WY(1),-16 : Y(1)=WY(1)*SPEED(1)
         End If 
         If PNT_Y(1)=0 and PY(T)<0
            SCRL_Y(1)=2
         End If 
         If PNT_Y(1)=53 and PY(T)>0
            SCRL_Y(1)=1
         End If 
      Else 
         If SCRL_Y(1)=2
            Add CAR_Y(1),PY(T)
            If CAR_Y(1)<-64*SPEED(1)
               CAR_Y(1)=-64*SPEED(1)
               '      _BRAKE[1] 
            End If 
            If CAR_Y(1)>0
               CAR_Y(1)=0 : SCRL_Y(1)=0
            End If 
         Else 
            Add CAR_Y(1),PY(T)
            If CAR_Y(1)>64*SPEED(1)
               CAR_Y(1)=64*SPEED(1)
               '      _BRAKE[1] 
            End If 
            If CAR_Y(1)<0
               CAR_Y(1)=0 : SCRL_Y(1)=0
            End If 
         End If 
      End If 
   End If 
End Proc
Procedure _SKID[PLY]
   If HIT(PLY)=0
      If SKID(PLY)=0
         T=T(PLY)
         If CAR_HIT(PLY)>0
            Add T,18
            If T>36
               T=18-(36-T(PLY)) : Rem flip direction 
            End If 
            Dec CAR_HIT(PLY)
            If SPDO(PLY)>185
               _BRAKE[PLY]
            End If 
         End If 
      Else 
         T=HOLD_T(PLY)
         Dec SKID(PLY)
         If SKID(PLY)<6
            If SPDO(PLY)>181
               _BRAKE[PLY]
            End If 
         End If 
         Add T(PLY),TURN(PLY),1 To 36
      End If 
   Else 
      T=T(PLY)+18
      If T>36
         T=18-(36-T(PLY))
      End If 
      If Deek(S(PLY))<197
         While SPEED(PLY)<1024
            _BRAKE[PLY]
         Wend 
         HIT(PLY)=0 : SKID(PLY)=0
      End If 
   End If 
End Proc
Procedure _MISSILE[PLY]
   If MIS_ON(PLY)=1
      Sprite 4+PLY,(WMX(PLY)+RCX(PLY))/16+223+PNTMX(PLY),(WMY(PLY)+RCY(PLY))/16+PNTMY(PLY)+193,
      Add MISX(PLY),PX(MT(PLY)) : WMX(PLY)=MISX(PLY)/8
      Add MISY(PLY),PY(MT(PLY)) : WMY(PLY)=MISY(PLY)/8
      If WMX(PLY)>32
         Inc PNTMX(PLY)
         If PNTMX(PLY)>126
            MIS_ON(PLY)=0 : Bob Off 2*PLY+2 : Bob Off 2*PLY+3
            Sprite Off 4+PLY
         End If 
         Add WMX(PLY),-16 : MISX(PLY)=WMX(PLY) : Rol.w 3,MISX(PLY)
      End If 
      If WMX(PLY)<0
         Dec PNTMX(PLY)
         If PNTMX(PLY)<0
            MIS_ON(PLY)=0 : Bob Off 2 : Bob Off 3
            Sprite Off 4+PLY
         End If 
         Add WMX(PLY),16 : MISX(PLY)=WMX(PLY) : Rol.w 3,MISX(PLY)
      End If 
      If WMY(PLY)<0
         Dec PNTMY(PLY)
         If PNTMY(PLY)<0
            MIS_ON(PLY)=0 : Bob Off 2*PLY+2 : Bob Off 2*PLY+3
            Sprite Off 4+PLY
         End If 
         Add WMY(PLY),16 : MISY(PLY)=WMY(PLY) : Rol.w 3,MISY(PLY)
      End If 
      If WMY(PLY)>32
         Inc PNTMY(PLY)
         If PNTMY(PLY)>60
            MIS_ON(PLY)=0 : Bob Off 2*PLY+2 : Bob Off 2*PLY+3
            Sprite Off 4+PLY
         End If 
         Add WMY(PLY),-16 : MISY(PLY)=WMY(PLY) : Rol.w 3,MISY(PLY)
      End If 
      '*** missile fired *** 
      MX=RCX(PLY)+(PNTMX(PLY)-(PNT_X(PLY)+4))*16+64+WMX(PLY)
      MY=RCY(PLY)+(PNTMY(PLY)-(PNT_Y(PLY)+4))*16+68+WMY(PLY)
      If MX>0 and MX<160 and MY>0 and MY<160
         Screen 1+PLY : Bob 2*PLY+2,MX,MY,MT(PLY)+144
      Else 
         Bob Off 2*PLY+2
      End If 
      '*** missile in eneRMY SIGHT***
      MX=RCX(PLY)+(PNTMX(PLY)-(PNT_X(1-PLY)+4))*16+64+WMX(PLY)
      MY=RCY(PLY)+(PNTMY(PLY)-(PNT_Y(1-PLY)+4))*16+68+WMY(PLY)
      If MX>0 and MX<160 and MY>0 and MY<160
         Screen 2-PLY : Bob 2*PLY+3,MX,MY,MT(PLY)+144
      Else 
         Bob Off 2*PLY+3
      End If 
   End If 
End Proc
Procedure _SCRL_RIGHT[PLY]
   Add SS(PLY),2 : Inc PNT_X(PLY) : Screen PLY+1
   Add WX(PLY),-16 : X(PLY)=WX(PLY)*SPEED(PLY)
   Screen Copy PLY+1,16,0,176,176 To PLY+1,0,0
   S=SS(PLY)
   ' Speed up program by not using a loop.  
   F Put Static Block Deek(S),160,0
   F Put Static Block Deek(S+256),160,16
   F Put Static Block Deek(S+512),160,32
   F Put Static Block Deek(S+768),160,48
   F Put Static Block Deek(S+1024),160,64
   F Put Static Block Deek(S+1280),160,80
   F Put Static Block Deek(S+1536),160,96
   F Put Static Block Deek(S+1792),160,112
   F Put Static Block Deek(S+2048),160,128
   F Put Static Block Deek(S+2304),160,144
   F Put Static Block Deek(S+2560),160,160
End Proc
Procedure _SCRL_DOWN[PLY]
   Add SS(PLY),256 : Inc PNT_Y(PLY) : Screen PLY+1
   Add WY(PLY),-16 : Y(PLY)=WY(PLY)*SPEED(PLY)
   Screen Copy PLY+1,0,16,176,176 To PLY+1,0,0
   S=SS(PLY)+2540
   ' Speed up program by not using a loop.  
   F Put Static Block Deek(S),0,160
   F Put Static Block Deek(S+2),16,160
   F Put Static Block Deek(S+4),32,160
   F Put Static Block Deek(S+6),48,160
   F Put Static Block Deek(S+8),64,160
   F Put Static Block Deek(S+10),80,160
   F Put Static Block Deek(S+12),96,160
   F Put Static Block Deek(S+14),112,160
   F Put Static Block Deek(S+16),128,160
   F Put Static Block Deek(S+18),144,160
   F Put Static Block Deek(S+20),160,160
End Proc
Procedure _SCRL_LEFT[PLY]
   Add SS(PLY),-2 : Dec PNT_X(PLY) : Screen PLY+1
   Add WX(PLY),16 : X(PLY)=WX(PLY)*SPEED(PLY)
   Screen Copy PLY+1,0,0,160,176 To PLY+1,16,0
   S=SS(PLY)-20
   ' Speed up program by not using a loop.  
   F Put Static Block Deek(S),0,0
   F Put Static Block Deek(S+256),0,16
   F Put Static Block Deek(S+512),0,32
   F Put Static Block Deek(S+768),0,48
   F Put Static Block Deek(S+1024),0,64
   F Put Static Block Deek(S+1280),0,80
   F Put Static Block Deek(S+1536),0,96
   F Put Static Block Deek(S+1792),0,112
   F Put Static Block Deek(S+2048),0,128
   F Put Static Block Deek(S+2304),0,144
   F Put Static Block Deek(S+2560),0,160
End Proc
Procedure _SCRL_UP[PLY]
   Add SS(PLY),-256 : Dec PNT_Y(PLY) : Screen PLY+1
   Add WY(PLY),16 : Y(PLY)=WY(PLY)*SPEED(PLY)
   Screen Copy PLY+1,0,0,176,160 To PLY+1,0,16
   S=SS(PLY)-20
   ' Speed up program by not using a loop.  
   F Put Static Block Deek(S),0,0
   F Put Static Block Deek(S+2),16,0
   F Put Static Block Deek(S+4),32,0
   F Put Static Block Deek(S+6),48,0
   F Put Static Block Deek(S+8),64,0
   F Put Static Block Deek(S+10),80,0
   F Put Static Block Deek(S+12),96,0
   F Put Static Block Deek(S+14),112,0
   F Put Static Block Deek(S+16),128,0
   F Put Static Block Deek(S+18),144,0
   F Put Static Block Deek(S+20),160,0
End Proc
Procedure _BRAKE[PLY]
   Dec SPDO(PLY)
   'Rol used for a quick *2, shift ins really needed. 
   Rol.w 1,SPEED(PLY) : Rol.l 1,CAR_X(PLY) : Rol.l 1,CAR_Y(PLY)
   Rol.w 1,X(PLY) : Rol.w 1,Y(PLY)
End Proc
Procedure _ACCELERATE[PLY]
   Inc SPDO(PLY)
   SPEED(PLY)=SPEED(PLY)/2 : CAR_X(PLY)=CAR_X(PLY)/2
   CAR_Y(PLY)=CAR_Y(PLY)/2 : X(PLY)=X(PLY)/2 : Y(PLY)=Y(PLY)/2
End Proc
Procedure _HIT_DAMAGE[PLY]
   Screen 0
   X=230*PLY+22
   If Rnd(1)=0 : Put Block 316,X,163 : End If 
   Put Block 317,X,163
   If Rnd(1)=0 : Put Block 318,X,163 : End If 
   If Rnd(1)=0 : Put Block 319,X,163 : End If 
   Add X,-22
   _TYPE[X+54,221,Str$(DAMAGE(PLY))+"%",1]
   Screen Copy 0,X+16,234,X+80,246 To 0,X+16,228
   Put Block 383,X+16,240 : Rem light damage 
   Screen Copy Logic(0),X,221,X+80,251 To Physic(0),X,221
End Proc
Procedure _MINE_DAMAGE[PLY]
   Screen 0
   X=230*PLY+22
   If Rnd(1)=0 : Put Block 315,X,163 : Add DAMAGE(PLY),4 : End If 
   If Rnd(1)=0 : Put Block 316,X,163 : Add DAMAGE(PLY),4 : End If 
   If Rnd(1)=0 : Put Block 317,X,163 : Add DAMAGE(PLY),4 : End If 
   Put Block 318,X,163 : Add DAMAGE(PLY),5
   If Rnd(1)=0 : Put Block 319,X,163 : Add DAMAGE(PLY),4 : End If 
   Add X,-22
   _TYPE[X+54,221,Str$(DAMAGE(PLY))+"%",1]
   Screen Copy 0,X+16,234,X+80,246 To 0,X+16,228
   Put Block 382,X+16,240 : Rem heavy damage 
   Screen Copy Logic(0),X,221,X+80,251 To Physic(0),X,221
End Proc
Procedure _MISSILE_DAMAGE[PLY]
   Screen 0
   PLY=1-PLY
   SKID(PLY)=7 : TURN(PLY)=Rnd(1) : If TURN(PLY)=0 : TURN(PLY)=-1 : End If 
   HOLD_T(PLY)=MT(1-PLY)
   While SPEED(PLY)>16
      _ACCELERATE[PLY]
   Wend 
   X=230*PLY+22
   If Rnd(1)=0 : Put Block 315,X,163 : Add DAMAGE(PLY),2 : End If 
   If Rnd(1)=0 : Put Block 316,X,163 : Add DAMAGE(PLY),2 : End If 
   Put Block 317,X,163 : Add DAMAGE(PLY),20
   If Rnd(1)=1 : Put Block 318,X,163 : Add DAMAGE(PLY),2 : End If 
   If Rnd(1)=0 : Put Block 319,X,163 : Add DAMAGE(PLY),2 : End If 
   Add X,-22
   _TYPE[X+54,221,Str$(DAMAGE(PLY))+"%",1]
   Screen Copy 0,X+16,234,X+80,246 To 0,X+16,228
   Put Block 382,X+16,240 : Rem heavy damage 
   Screen Copy Logic(0),X,221,X+80,251 To Physic(0),X,221
End Proc
Procedure RIP_PLY[P]
   Bob Off 8 : Bob Off 9 : Bob Off 10 : Bob Off 11
   Screen 0 : _TYPE[230*(P-1)+54,221," 100%",1]
   Screen Copy Logic(0) To Physic(0)
   Screen P
   Bob 12,X Bob(8-P),Y Bob(8-P),193
   Bob 13,X Bob(8-P),Y Bob(8-P),194
   Bob 14,X Bob(8-P),Y Bob(8-P),199
   If PNT_X(1)>PNT_X(0)-6 and PNT_X(1)<PNT_X(0)+6 and PNT_Y(1)>PNT_Y(0)-6 and PNT_Y(1)<PNT_Y(0)+6
      OTHER_SIDE=1 : B=2-P
      Screen 3-P
      Bob 15,X Bob(B),Y Bob(B),193
      Bob 16,X Bob(B),Y Bob(B),194
      Bob 17,X Bob(B),Y Bob(B),199
   End If 
   Timer=0
   Repeat 
      For L=12 To 14
         Screen 3-P
         If OTHER_SIDE=1
            Bob L+3,,,I Bob(L+3)+1
         End If 
         Screen P : Bob L,,,I Bob(L)+1
         If I Bob(L)>198
            RX=Rnd(32)-16 : RY=Rnd(32)-16
            Bob L,X Bob(5+P)+RX,Y Bob(5+P)+RY-10,192
            Sam Play Rnd(14)+1,1
            If OTHER_SIDE=1
               Screen 3-P : Bob L+3,X Bob(B)+RX,Y Bob(B)+RY-10,192
            End If 
         End If 
         If(Fire(0) or Fire(1)) and Timer>20
            Timer=600
         End If 
      Next L
      If Timer<400 : CX=Rnd(31) : CY=Rnd(31) : End If 
      If QUIT=1
         Screen Copy 1,CX,CY,CX+144,CY+144 To 0,0,4
         Screen Copy 2,WX(0),WY(0),WX(0)+144,WY(0)+144 To 0,176,4
      Else 
         Screen Copy 1,WX(1),WY(1),WX(1)+144,WY(1)+144 To 0,0,4
         Screen Copy 2,CX,CY,CX+144,CY+144 To 0,176,4
      End If 
      Bob Clear : Bob Draw 
      Screen Swap : Wait Vbl 
   Until Timer>600
   Sprite Off : Screen 0
   Fade 1,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF,$FFF
   Wait 15 : Fade 1 : Wait 15
   WINNER_PLY[3-P]
   Bob Off 
End Proc
Procedure WINNER_PLY[PLY]
   Dim A(18),RX(18),RY(18)
   Screen Open 0,320,46,16,Lowres : Curs Off : Blit Clear -1
   Flash Off : Double Buffer : Autoback 0
   Screen Display 0,,44,,
   Bob Draw 
   Screen 1 : Get Cblock 1,0,0,160,160
   Screen Open 1,320,200,16,Lowres : Screen Hide 1
   Flash Off : Blit Clear -1 : Get Sprite Palette 
   Screen Display 1,128,90,,
   Put Cblock 1,80,0
   Screen 2 : Get Cblock 1,0,0,160,160
   Screen Open 2,320,200,16,Lowres : Screen Hide 2
   Flash Off : Blit Clear -1 : Get Sprite Palette 
   Screen Display 2,128,90,,
   Put Cblock 1,80,0 : Del Cblock 1
   Screen PLY
   If(SEL1=0 and PLY=1) or(SEL2=0 and PLY=2)
      _TYPE2[32,170,"PLAYER"+Str$(PLY)+" WINS"]
   Else 
      _TYPE2[80,170,"CPU WINS"]
   End If 
   Screen 3-PLY : _TYPE2[80,170,"BAD LUCK"]
   Timer=0 : SN=PLY : Screen To Front SN
   Palette 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   Screen Show 1 : Screen Show 2
   Screen SN : Fade 1 To -1 : Screen 0 : Wait 15
   Get Sprite Palette : Colour 9,Colour(0) : C0=Colour(0)
   For K=0 To 18
      Add A,1,0 To 6 : A(K)=A+192
      RX(K)=K*11+39 : RY(K)=Rnd(32)-16
   Next K
   Repeat 
      For K=0 To 18
         If A(K)=192 Then RY(K)=Rnd(40)-20
         Paste Bob RX(K),RY(K),A(K)
         Add A(K),1,192 To 198
      Next K
      F Put Static Block 452,32,0 : Screen Swap : Wait Vbl : Blit Clear -1
      If Timer>200
         Screen SN : Fade 1,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0
         If Timer>215
            Add SN,1,1 To 2 : Screen SN
            Palette C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0
            Screen To Front SN : Timer=0
            Fade 1 To -1
         End If 
         Screen 0
      End If 
   Until Fire(0) or Fire(1)
   Screen SN : Fade 1
End Proc
'
Procedure _TYPE[X,Y,S$,S]
   L=Len(S$)-1 : A=Varptr(S$)
   For K=0 To L
      If S=1
         Put Block 360,K*4+X,Y
      End If 
      Put Block 319+Instr(CHCK1$,Chr$(Peek(A+K))),K*4+X,Y
   Next K
End Proc
Procedure _TYPE2[X,Y,S$]
   L=Len(S$)-1 : A=Varptr(S$)
   For K=0 To L
      Put Block 398+Instr(CHCK2$,Chr$(Peek(A+K))),K*20+X,Y
   Next K
End Proc
'
Procedure OPTION
   Dim A(29),RX(29),RY(29)
   If MUS=1
      Track Play 
   Else 
      Dec MUS
   End If 
   Do 
      Screen Open 0,320,46,16,Lowres : Screen Hide 0
      Curs Off : Flash Off : Blit Clear -1 : Get Sprite Palette 
      C0=Colour(0)
      Screen Open 1,320,200,16,Lowres : Screen Hide 1
      Curs Off : Flash Off : Blit Clear -1
      Get Sprite Palette 
      Screen Open 2,320,200,8,Lowres : Screen Hide 2
      Curs Off : Flash Off : Blit Clear -1
      Get Sprite Palette 
      Screen 0 : Double Buffer : Autoback 0 : Bob Update Off 
      Screen Display 0,,44,, : Colour 9,C0 : Screen To Front 0 : Colour Back $333
      Screen Display 1,,91,320,200 : Screen Display 2,,91,320,200
      For K=0 To 18
         Add A,1,0 To 6 : A(K)=A+192
         RX(K)=K*11+39
         RY(K)=Rnd(32)-16
      Next K
      Screen 2
      _TYPE2[48,6,"PROGRAMMING"]
      _TYPE2[58,30,"  - FX -"]
      _TYPE2[58,54,"PAUL OVERY"]
      _TYPE2[48,90," ANIMATION"]
      _TYPE2[38,114,"  GRAPHICS"]
      _TYPE2[36,138,"PAUL COTTAGE"]
      If MUS=1
         _TYPE2[28,180,"MUSIC BY OOZE"]
      Else 
         _TYPE2[36,180,"FRY-UP GAMES"]
      End If 
      Screen 1
      _TYPE2[68,1,"---------"]
      _TYPE2[68,30,"---------"]
      _TYPE2[68,16,"~OPTIONS~"]
      _TYPE2[38,180,"'PRESS FIRE'"]
      _TYPE2[32,60,"F1:"]
      _TYPE2[32,82,"F2:"]
      _TYPE2[32,104,"F3:LAPS"]
      _TYPE2[32,126,"F4:TRACK"]
      _TYPE2[32,148,"F5:WEAPONS O"]
      Paste Bob 178,60,10
      Paste Bob 178,79,46
      If SEL1=0
         _TYPE2[92,60,"JOY1"]
      Else 
         _TYPE2[92,60,"CPU!"]
      End If 
      If SEL2=0
         _TYPE2[92,82,"JOY2"]
      Else 
         _TYPE2[92,82,"CPU!"]
      End If 
      If WEPS=0
         _TYPE2[252,148,"ON "]
      Else 
         _TYPE2[272,148,"FF"]
      End If 
      _TYPE2[188,104,Str$(LAPS)-" "]
      Screen Show 0 : Screen Show 1 : Screen Show 2
      Repeat 
         Timer=0 : _ONCE=False : MAP_LOAD=FLASE : CH=0
         Screen 1 : Palette C0,C0,C0,C0,C0,C0,C0,C0 : Fade 6 To -1
         Screen To Front 1
         Set Rainbow 0,6,48,"(3,-1,1)","","(6,1,1)"
         Channel 15 To Rainbow 0 : Rainbow 0,0,86,48
         Amal 15,"A: M 0,11,22; M 0,-11,22; J A" : Amal On 
         Repeat 
            If Timer>600 and _ONCE=False
               _ONCE=True
               Rainbow 0,0,0,0 : Rainbow Del 
               Get Sprite Palette : Screen To Front 2
               Set Rainbow 1,6,100,"(6,1,1)","(6,1,1)","(3,-2,1)"
               Set Rainbow 2,6,100,"(6,1,1)","(6,1,1)","(3,-2,1)"
               Rainbow 1,0,69,100 : Rainbow 2,0,153,100
            End If 
            Screen 0
            For K=0 To 18
               If A(K)=192 Then RY(K)=Rnd(40)-20
               Paste Bob RX(K),RY(K),A(K)
               Add A(K),1,192 To 198
            Next K
            If Timer>600
               CH=2
            Else 
               Add C,1,0 To 40
               If C=0 : CH=1-CH : End If 
            End If 
            F Put Static Block 449+CH,32,0
            Vbl Wait 91 : Screen Swap : Blit Clear -1
            Screen 1
            If OK<0
               If Raw Key(80)
                  Timer=0 : OK=3
                  SEL1=1-SEL1
                  If SEL1=0
                     _TYPE2[92,60,"JOY1"]
                  Else 
                     _TYPE2[92,60,"CPU!"]
                  End If 
               End If 
               If Raw Key(81)
                  Timer=0 : OK=3
                  SEL2=1-SEL2
                  If SEL2=0
                     _TYPE2[92,82,"JOY2"]
                  Else 
                     _TYPE2[92,82,"CPU!"]
                  End If 
               End If 
               If Raw Key(82)
                  Timer=0 : OK=2
                  Add LAPS,1,1 To 9
                  _TYPE2[188,104,Str$(LAPS)-" "]
               End If 
               If Raw Key(83)
                  MAP_LOAD=True : Timer=9999
               End If 
               If Raw Key(84)
                  WEPS=1-WEPS : OK=2 : Timer=0
                  If WEPS=0
                     _TYPE2[252,148,"ON "]
                  Else 
                     _TYPE2[272,148,"FF"]
                  End If 
               End If 
            Else 
               Dec OK
            End If 
         Until Fire(0) or Fire(1) or Timer>1000
         HT=Timer
         While Fire(0) or Fire(1) : Wend : Timer=HT
         Amal Off 
         Set Rainbow 0,0,16,"","",""
         Set Rainbow 1,0,16,"","",""
         Set Rainbow 2,0,16,"","",""
         Rainbow 0,0,0,0 : Rainbow 1,0,0,0 : Rainbow 2,0,0,0
         Rainbow Del 
      Until Timer>1000 or Timer<601
      Screen Close 2
      Screen 0 : Fade 2 : Colour Back 0
      For F=0 To 29
         For K=0 To 15
            Screen 0 : C=Colour(K)
            Screen 1 : Colour K,C
         Next K
         Wait Vbl 
      Next F
      If Timer>1000
         If MAP_LOAD=True
            SELECT_MAP
         Else 
            USER_HELP
            INITIALISE[1] : Rem intialise for demo 
            Unpack 10 To 3
            Unpack 11 To 4
            Unpack 12 To 5
            Unpack 9 To 6
            Screen Open 2,320,20,8,Lowres : Palette 0,0,0,0,0,0,0,0
            Screen Display 2,128,38,,
            Flash Off : Curs Off : Blit Clear -1
            _TYPE2[70,0,"DEMO MODE"]
            Fade 1 To -1 : Wait 15
            Screen 0 : Fade 2 To -1
            Bob Off : Timer=0 : SCRN=3
            For K=0 To 7 : Sprite K,0,0,191 : Next K
            Do 
               COMPUTER[0]
               COMPUTER[1]
               _DEMO_UPDATE
               If Timer>415
                  Screen SCRN : Fade 1,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0
                  If Timer>430
                     Timer=0 : Add SCRN,1,3 To 6
                     Screen SCRN
                     Palette C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0,C0
                     Screen To Front SCRN
                     Fade 1 To -1
                  End If 
               End If 
               If QUIT<>0 or Fire(0) or Fire(1) : Exit : End If 
            Loop 
            Sprite Off 
            Screen SCRN : Get Sprite Palette : Screen To Front SCRN
            Screen 0 : Fade 4
            For F=0 To 59
               Screen 0 : C=Colour(0)
               For K=0 To 15
                  Screen SCRN : Colour K,C
                  Screen 2 : Colour K,C
               Next K
               Wait Vbl 
            Next F
            Screen Hide 3 : Screen Hide 4 : Screen Hide 5 : Screen Hide 6
            Screen Close 3 : Screen Close 4 : Screen Close 5 : Screen Close 6
         End If 
      Else 
         If MUS=1 : Track Stop : End If 
         Exit 
      End If 
   Loop 
End Proc
Procedure SELECT_MAP
   Screen Open 0,320,256,16,Lowres : Curs Off : Flash Off : Blit Clear -1
   Palette 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   _TYPE2[0,32,"BUTTON TO SELECT"]
   _TYPE2[48,200,"JOYSTICK UP"]
   _TYPE2[80,222,"FOR MORE"]
   While Exist("high_octane:")
      Dir$="high_octane:roads/"
      MAP$=Dir First$("*.MAP")
      Repeat 
         O=1
         Repeat 
            M$=Mid$(MAP$,2,O)
            Inc O
         Until Mid$(MAP$,O,4)=".map"
         Bload M$+"map",8
         Load Iff M$+"iff",1 : Screen To Front 0
         Spack 1 To 14
         Screen Copy 1,0,0,128,64 To 0,96,80
         Screen 0 : Ink 0 : Bar 100,150 To 320,156
         _TYPE[100,150,Upper$(M$),0]
         Fade 1 To -1 : Wait 15
         Do 
            If Fire(0) or Fire(1) Then Exit 3
            If Jup(1) Then Exit 
         Loop 
         Fade 1
         MAP$=Dir Next$
      Until MAP$=""
   Wend 
   Multi Yes : Fade 4 : Wait 60 : Multi No : Rem stop drive spinning
End Proc
Procedure USER_HELP
   Screen Open 0,320,256,16,Lowres : Curs Off : Flash Off : Blit Clear -1
   Screen Display 0,,38,, : Get Sprite Palette 
   Bob Update Off : Autoback 0 : Double Buffer 
   For K=0 To 15 : Colour K+16,Colour(K) : Next K
   Set Rainbow 0,6,30,"(2,-1,2)","(16,1,1)","(2,-1,1)" : Rainbow 0,$AAA,38,30
   S$="R:L A=145;L R1=-3-Z(5);L R0=0;"
   S$=S$+"L X=XH(0,160);L Y=YH(0,255);"
   S$=S$+"L R2=Z(2)-1;"
   S$=S$+"A:P;L Y=Y+R1;"
   S$=S$+"L X=X+R2;"
   S$=S$+"I Y>YH(0,255) J R:"
   S$=S$+"I X>XH(0,319) J R:"
   S$=S$+"I X<XH(0,0) J R:"
   S$=S$+"L R0=R0+1;"
   S$=S$+"I R0=7 J U;"
   S$=S$+"J A;"
   S$=S$+"U:L R1=R1+1; L R0=0;L A=A+R2;I A<145 J N;I A>179 J M;J A;"
   S$=S$+"N:L A=179;J A;"
   S$=S$+"M:L A=145;J A;"
   Unpack 6 To 1 : Screen Hide 1 : Screen 0
   LEAVE=False
   For S=10 To 1 Step -1
      For Y=0 To 256-S Step S
         For L=0 To S
            Screen Copy 1,0,Y,320,Y+1 To Logic(0),0,Y+L
         Next L
         If Fire(0) or Fire(1) : LEAVE=True : Exit 2 : End If 
      Next Y
      Screen Swap : Wait Vbl 
   Next S
   Screen Copy Physic(0) To Logic(0)
   For K=0 To 7 Step 2
      Sprite K,0,0,145 : Channel K To Sprite K
      Amal K,S$
   Next K
   Bob 0,68,56,1 : Bob 1,68,104,37 : Bob 2,259,56,73
   Channel 10 To Bob 0 : Channel 11 To Bob 1 : Channel 12 To Bob 2
   Amal 10,"R:L A=36;P A:L A=A-1;P;I A<2 J R;J A;"
   Amal 11,"R:L A=37;P A:L A=A+1;P;I A>71 J R;J A;"
   Amal 12,"R:L A=145;P A:L A=A+1;P;I A>179 J R;J A;"
   Amal On 
   Timer=0
   Repeat 
      Bob Clear : Bob Draw 
      Screen Swap : Wait Vbl 
   Until Fire(0) or Fire(1) or Timer=800 or LEAVE=True
   Rainbow 0,0,0,0 : Rainbow Del : Amal Off : Sprite Off 
   Bob Off : Bob Clear : Bob Draw 
   Fade 2 : Wait 30 : Blit Clear -1 : Screen 1 : Blit Clear -1
End Proc
Procedure SET_UP
   Dir$="high_octane:banks/" : Hide 
   Load "ld_scrn.dat",15 : Unpack 15 To 2
   Colour Back Colour(0) : Wait Vbl 
   Auto View Off 
   '--------------------------------------- 
   Parent 
   'Track Load "high_octane:mod.the-time",13
   'If Chip Free>800000 
     ' Track Loop On : MUS=2
     ' Track Play 
  ' Else 
    '  Track Loop On 
    '  Track Play  
   '   Paper 0 : Centre "Press Fire/Music by Ooze"
    '  Repeat : Until Fire(0) or Fire(1) 
     ' Track Stop 
    '  Centre "Now loading High Octane." 
   '   Erase 13 : MUS=0 
  ' End If 
   Reserve As Work 7,24576
   Reserve As Work 8,24576
   '--------------------------------------- 
   SIZE_X=128 : SIZE_Y=64
   SEL1=1 : SEL2=0 : LAPS=3
   '--------------------------------------- 
   For K=1 To 36
      Read PX(K),PY(K)
   Next K
   '--------------------------------------- 
   Set Sprite Buffer 128 : Hide 
   '----------------------------------------- 
   Parent : Dir$="high_octane:roads/"
   Load Iff "road1.iff",0 : Spack 0 To 14 : Bload "road1.map",8
   Dir$="high_octane:banks/"
   Load "game_sounds.dat"
   Load "info.dat",6
   Load "details4.dat",9
   Load "details3.dat",10
   Load "details2.dat",11
   Load "details1.dat",12
   Load "car.dat",15 : Unpack 15 To 0
   N=1
   For Y=0 To 149 Step 21
      For X=0 To 288 Step 32
         If N<73 Then Get Bob 0,N,X,Y To X+32,Y+21 : Inc N
      Next X
   Next Y
   Load "skids.dat",15 : Unpack 15 To 0
   For Y=0 To 152 Step 19
      For X=0 To 288 Step 32
         If N<145 Then Get Bob 0,N,X,Y To X+32,Y+19 : Inc N
      Next X
   Next Y
   For Y=152 To 178 Step 13
      For X=0 To 304 Step 16
         If N<181 Then Get Bob 0,N,X,Y To X+16,Y+13 : Inc N
      Next X
   Next Y
   ' --- SPEED DISPLAY  
   Load "spdo.dat",15 : Unpack 15 To 0
   For X=0 To 112 Step 16
      Get Bob 0,N,X,0 To X+16,64 : Inc N
   Next X
   Get Bob 0,N,0,64 To 16,80 : Inc N
   Get Bob 0,N,16,64 To 32,80 : Inc N
   Get Bob 0,N,0,80 To 16,96 : Inc N
   ' --- EXPLOSION
   Load "exp.dat",15 : Unpack 15 To 1 : Screen Hide 1
   For X=0 To 240 Step 48
      Get Bob 1,N,X,0 To X+48,39 : Inc N
   Next X
   Get Bob 1,N,0,39 To 48,78 : Inc N
   Load "spdo.dat",15 : Unpack 15 To 0 : Screen 0
   Get Sprite 0,N,0,94 To 64,126 : Inc N
   Get Bob 0,N,32,64 To 48,80 : Inc N
   Get Bob 0,N,48,64 To 64,80 : Inc N
   Get Bob 0,N,64,64 To 80,80 : Inc N
   Get Bob 0,N,80,64 To 96,80 : Inc N
   '------------------------------------- 
   Load "blocks.dat",15 : Unpack 15 To 0 : Screen 0
   N=1
   For Y=0 To 240 Step 16
      For X=0 To 304 Step 16
         If N<313
            Get Block N,X,Y,16,16,0 : Inc N
         End If 
      Next X
   Next Y
   Get Block N,192,240,16,16,1 : Inc N
   '    
   Load "damage.dat",15 : Unpack 15 To 0
   For X=0 To 240 Step 48
      If X=0
         Get Block N,X,0,48,57,0 : Inc N
      Else 
         Get Block N,X,0,48,57,1 : Inc N
      End If 
   Next X
   '
   Screen 1 : Rem SMALL LETTERS
   For Y=80 To 92 Step 6
      For X=0 To 304 Step 16
         Get Block N,X,Y,16,6,1 : Inc N
      Next X
   Next Y
   For Y=112 To 220 Step 6
      Get Block N,0,Y,64,6,0 : Inc N
   Next Y
   Load "letters.dat",15 : Unpack 15 To 0 : Screen 0
   For Y=0 To 80 Step 20
      For X=0 To 288 Step 32
         Get Block N,X,Y,32,20,0 : Inc N
      Next X
   Next Y
   Load "title.dat",15
   Unpack 15 To 0
   Screen 0
   Get Block N,32,0,246,46,1 : Inc N
   Get Block N,32,46,246,46,1 : Inc N
   Get Block N,32,92,246,46,1 : Inc N
   Get Block N,32,138,246,46,1
   Reserve Static Block N
   Build Static Block 
   Load "ply.dat",15
   Make Mask : Blit Clear -1
   M$="road1."
   Screen 2 : Fade 6 : Wait 50
   Auto View On 
   '
   'Car Direction Data, 36 turning angles.
   Data 0,-128
   Data 22,-126
   Data 43,-120
   Data 63,-110
   Data 82,-98
   Data 98,-82
   Data 110,-64
   Data 120,-43
   Data 126,-22
   Data 128,0
   Data 126,22
   Data 120,43
   Data 110,63
   Data 98,82
   Data 82,98
   Data 64,110
   Data 43,120
   Data 22,126
   Data 0,128
   Data -22,126
   Data -43,120
   Data -63,110
   Data -82,98
   Data -98,82
   Data -110,64
   Data -120,43
   Data -126,22
   Data -128,0
   Data -126,-22
   Data -120,-43
   Data -110,-63
   Data -98,-82
   Data -82,-98
   Data -64,-110
   Data -43,-120
   Data -22,-126
End Proc
Procedure INITIALISE[FLAG]
   Copy Start(8),Start(8)+Length(8) To Start(7)
   Screen Open 1,176,176,16,Lowres : Curs Off : Blit Clear -1 : Flash Off 
   Screen Open 2,176,176,16,Lowres : Curs Off : Blit Clear -1 : Flash Off 
   If FLAG=0
      Unpack 15 To 0
      Screen Display 0,128,40,,
   Else 
      Screen Open 0,320,144,16,Lowres : Curs Off : Blit Clear -1 : Flash Off 
      Screen Display 0,128,59,,
      LVE=3
   End If 
   Screen 0 : Palette 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   ADR=Start(7)
   QUIT=0 : Randomize Timer
   SIZE_X=117 : SIZE_Y=53
   For PLY=0 To 1
      CANT_DROP(PLY)=20 : BOMBS(PLY)=4 : ROCKETS(PLY)=3
      CHECK_POINT(PLY)=40 : LAPS(PLY)=0
      NO_FUEL(PLY)=0 : FUEL(PLY)=25 : FUEL_C(PLY)=100
      STR_X(PLY)=10 : STR_Y(PLY)=1*(1-PLY)
      SPEED(PLY)=1024 : DAMAGE(PLY)=0 : MISSILE_HIT(PLY)=0
      WX(PLY)=16 : WY(PLY)=16
      S=SPEED(PLY) : SPDO(PLY)=181
      While S<>1024
         Add S,S
         Inc SPDO(PLY)
      Wend 
      X(PLY)=WX(PLY)*SPEED(PLY) : Y(PLY)=WY(PLY)*SPEED(PLY)
      PNT_X(PLY)=STR_X(PLY) : PNT_Y(PLY)=STR_Y(PLY)
      T(PLY)=10 : SKID(PLY)=0 : HIT(PLY)=0
      CAR_X(PLY)=0 : CAR_Y(PLY)=-15*PLY*SPEED(PLY) : MIS_ON(PLY)=0
      If CAR_Y(PLY)<0
         SCRL_Y(PLY)=2
      Else 
         If CAR_Y(PLY)>0
            SCRL_Y(PLY)=1
         Else 
            SCRL_Y(PLY)=0
         End If 
      End If 
      If CAR_X(PLY)<0
         SCRL_X(PLY)=2
      Else 
         If CAR_X(PLY)>0
            SCRL_X(PLY)=1
         Else 
            SCRL_X(PLY)=0
         End If 
      End If 
      S(PLY)=(CAR_X(PLY)/SPEED(PLY)/16+5+PNT_X(PLY))*2+(CAR_Y(PLY)/SPEED(PLY)/16+5+PNT_Y(PLY))*256+ADR
      SS(PLY)=ADR+(PNT_X(PLY)+10)*2+PNT_Y(PLY)*256
      _TYPE[230*PLY+54,221,Str$(DAMAGE(PLY))+"%",1]
      _TYPE[230*PLY+8,181,Str$(BOMBS(PLY)),1]
      _TYPE[230*PLY+70,181,Str$(ROCKETS(PLY)),1]
      Screen PLY+1
      Get Palette 0
      For Y=STR_Y(PLY) To STR_Y(PLY)+10
         For X=STR_X(PLY) To STR_X(PLY)+10
            I=Deek(X*2+Y*256+ADR)
            F Put Static Block I,(X-STR_X(PLY))*16,(Y-STR_Y(PLY))*16
         Next X
      Next Y
      Screen 0
      _TYPE2[PLY*80+112,232,Str$(LAPS(PLY))-" "]
   Next PLY
   Screen Copy Logic(0),96,232,224,252 To Physic(0),96,232
   '
   _TYPE[12,240,">",0]
   _TYPE[242,240,">",0]
   _TYPE[12,228,">STATUS OK",0]
   _TYPE[242,228,">STATUS OK",0]
   If WEPS=0
      _TYPE[12,234,">WEAPONS READY",0]
      _TYPE[242,234,">WEAPONS READY",0]
   Else 
      _TYPE[12,234,">WEAPONS OFF",0]
      _TYPE[242,234,">WEAPONS OFF",0]
   End If 
   X=1024 : Y=0
   Double Buffer : Bob Update Off : Autoback 0
   Screen 1 : Bob 6,CAR_X(0)/SPEED(0)+WX(0)+56,CAR_Y(0)/SPEED(0)+WY(0)+62,T(0)
   Screen 2 : Bob 7,CAR_X(1)/SPEED(1)+WX(1)+56,CAR_Y(1)/SPEED(1)+WY(1)+62,T(1)+36
   If PNT_X(1)>PNT_X(0)-6 and PNT_X(1)<PNT_X(0)+6 and PNT_Y(1)>PNT_Y(0)-6 and PNT_Y(1)<PNT_Y(0)+6
      Bob 1,(PNT_X(0)-PNT_X(1))*16+56+WX(0)+(CAR_X(0)/SPEED(0)),(PNT_Y(0)-PNT_Y(1))*16+63+WY(0)+(CAR_Y(0)/SPEED(0)),T(0)
      Screen 1 : Bob 0,(PNT_X(1)-PNT_X(0))*16+56+WX(1)+(CAR_X(1)/SPEED(1)),(PNT_Y(1)-PNT_Y(0))*16+63+WY(1)+(CAR_Y(1)/SPEED(1)),T(1)+36
   End If 
   If FLAG=0
      Unpack 14 To 3 : Screen Hide 3
      Screen Copy 3,0,0,128,64 To Logic(0),96,156
      Screen Copy 3,0,0,128,64 To Physic(0),96,156
      Screen Close 3 : Screen 0 : Get Sprite Palette : Colour Back $333
      For K=0 To 12 Step 4
         Colour 17+K,$999 : Colour 18+K,$700 : Colour 19+K,$5
      Next K
      If SEL1=1 and SEL2=1
         OK=1
      Else 
         OK=0
      End If 
      Bob Clear : Bob Draw 
      Repeat 
         Add X,Y/8 : Add Y,-X/8 : CX=X/64 : CY=Y/64
         Sprite 0,X Hard(41),Y Hard(52),199
         Sprite 4,X Hard(41)+176,Y Hard(52),199
         Screen Copy 1,CX+16,CY+16,CX+160,CY+160 To 0,0,4
         Screen Copy 2,CX+16,CY+16,CX+160,CY+160 To 0,176,4
         Screen Swap : Wait Vbl 
      Until Fire(0) or Fire(1) or OK=1
      Sprite Off 
      Sprite 6,281,168-FUEL(0),191 : Sprite 7,281,100-FUEL(1),191
      While CX<>0 and CY<>0
         Screen Copy 1,CX+16,CY+16,CX+160,CY+160 To 0,0,4
         Screen Copy 2,CX+16,CY+16,CX+160,CY+160 To 0,176,4
         Bob Clear : Bob Draw : Screen Swap : Wait Vbl 
         If CX>0
            Dec CX
         Else 
            Inc CX
         End If 
         If CY>0
            Dec CY
         Else 
            Inc CY
         End If 
      Wend 
      While Fire(0) or Fire(1) : Wend 
   End If 
   Bob Clear 
End Proc
